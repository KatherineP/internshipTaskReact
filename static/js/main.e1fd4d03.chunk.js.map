{"version":3,"sources":["components/header/index.js","config.js","components/calendarTable/index.js","components/tableCell/index.js","components/login/index.js","components/userDropdown/index.js","components/userContext/index.js","components/confirmPopup/index.js","components/newEventPage/index.js","services/index.js","components/app/index.js","index.js"],"names":["Header","getFilteredUser","openNewEventForm","authUser","useContext","UserContext","className","onChange","e","target","value","isAdmin","type","onClick","users","name","id","time","fullTime","daysOfWeek","fullDay","CalendarTable","eventsFromServer","deleteById","classes","rows","map","scope","Math","floor","random","col","TableCell","useState","confirmationPopup","setConfirmationPopup","cellClass","event","find","day","undefined","eventText","aria-label","eventTitle","eventId","Login","getAuthUser","show","setShow","selectValue","setSelectValue","handleClose","Modal","onHide","backdrop","keyboard","centered","closeButton","Title","Body","Footer","Button","variant","UserDropdown","usersList","user","React","createContext","ConfirmPopup","NewEventPage","getNewEvent","onCancelNewEvent","setEvent","eventTextError","setEventTextError","eventParticipantsError","setEventParticipantsError","eventDayError","setEventDayError","eventTimeError","setEventTimeError","htmlFor","placeholder","required","size","multiple","arr","Array","from","selectedOptions","option","participants","match","hasText","hasOwnProperty","hasParticipants","hasDay","hasTime","preventDefault","swagger","_apiBase","postNewEvent","eventObj","a","axios","post","_createDataObj","result","data","getAllEvents","get","res","_transformEvents","deleteEvent","delete","putEvent","put","_transformEvent","JSON","parse","stringify","App","setUser","loginStatus","setLoginStatus","setEventsFromServer","filteredUser","setFilteredUser","showNewEventForm","setShowNewEventForm","errorMessage","setErrorMessage","useEffect","events","Promise","reject","fetchEvents","allEvents","userName","index","findIndex","copyOfEventsArr","splice","role","newEvent","eventFromCalendar","then","newObjEvent","prev","Provider","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1fd4d03.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport './header.css';\nimport { UserDropdown } from '../index';\nimport { UserContext } from '../index';\n\nconst Header = ({ getFilteredUser, openNewEventForm }) => {\n  const authUser = useContext(UserContext);\n\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <h1>Calendar</h1>\n      <div className=\"d-flex\">\n        <div className=\"mr-3\">\n          <select\n            className=\"custom-select users-filter\"\n            onChange={(e) => {\n              getFilteredUser(e.target.value);\n            }}\n          >\n            <option value=\"All members\">All members</option>\n            <UserDropdown />\n          </select>\n        </div>\n        <div>\n          {authUser.isAdmin && (\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary new-event\"\n              onClick={() => openNewEventForm()}\n            >\n              New Event +\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Header };\n","const users = [\n  { name: 'Kate Prokofieva', isAdmin: true, id: 1 },\n  { name: 'Alex Prokofiev', isAdmin: false, id: 2 },\n  { name: 'Peter Smolic', isAdmin: false, id: 3 },\n  { name: 'Hana Carpenter', isAdmin: false, id: 4 },\n];\n\nconst time = [\n  { fullTime: '10:00', value: '10' },\n  { fullTime: '11:00', value: '11' },\n  { fullTime: '12:00', value: '12' },\n  { fullTime: '13:00', value: '13' },\n  { fullTime: '14:00', value: '14' },\n  { fullTime: '15:00', value: '15' },\n  { fullTime: '16:00', value: '16' },\n  { fullTime: '17:00', value: '17' },\n  { fullTime: '18:00', value: '18' },\n];\n\nconst daysOfWeek = [\n  { fullDay: 'Monday', value: 'mon' },\n  { fullDay: 'Tuesday', value: 'tue' },\n  { fullDay: 'Wednesday', value: 'wed' },\n  { fullDay: 'Thursday', value: 'thu' },\n  { fullDay: 'Friday', value: 'fri' },\n];\n\nexport { users, time, daysOfWeek };\n","import React from 'react';\nimport './calendarTable.css';\nimport { TableCell } from '../index';\nimport { time } from '../../config';\n\nconst CalendarTable = ({ eventsFromServer, deleteById }) => {\n  const classes = [\n    'cell-mon-',\n    'cell-tue-',\n    'cell-wed-',\n    'cell-thu-',\n    'cell-fri-',\n  ];\n\n  const rows = time.map((time) => (\n    <tr key={time.value + Math.floor(Math.random() * 100)}>\n      <th scope=\"row\">{time.fullTime}</th>\n      {classes.map((className) => (\n        <TableCell\n          className={className}\n          time={time.value}\n          key={className}\n          eventsFromServer={eventsFromServer}\n          deleteById={deleteById}\n        />\n      ))}\n    </tr>\n  ));\n\n  return (\n    <table className=\"table table-bordered text-center\">\n      <thead className=\"table-secondary\">\n        <tr>\n          {['Name', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'].map((col) => (\n            <th scope=\"col\" key={col}>\n              {col}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nexport { CalendarTable };\n","import React, { useContext, useState } from 'react';\nimport './tableCell.css';\nimport { UserContext } from '../index';\nimport { ConfirmPopup } from '../index';\n\nconst TableCell = ({ className, time, eventsFromServer, deleteById }) => {\n  const [confirmationPopup, setConfirmationPopup] = useState(false);\n  const authUser = useContext(UserContext);\n  const cellClass = `${className}${time}`;\n  const event = eventsFromServer.find(\n    (event) => cellClass === `cell-${event.day}-${event.time}`\n  );\n  const showConfirmationPopup = () => {\n    setConfirmationPopup(!confirmationPopup);\n  };\n\n  if (event !== undefined) {\n    return (\n      <td className={`${cellClass} event`}>\n        <div id={cellClass}>\n          {event.eventText}\n          {authUser.isAdmin && (\n            <button\n              type=\"button\"\n              id=\"delete-event\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={() => {\n                showConfirmationPopup();\n              }}\n            >\n              <span className=\"delete-event\">&times;</span>\n            </button>\n          )}\n          {confirmationPopup && (\n            <ConfirmPopup\n              eventTitle={event.eventText}\n              eventId={event.id}\n              deleteById={deleteById}\n            />\n          )}\n        </div>\n      </td>\n    );\n  } else {\n    return <td className={cellClass}></td>;\n  }\n};\n\nexport { TableCell };\n","import React, { useState } from 'react';\nimport { UserDropdown } from '../index';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst Login = ({ getAuthUser }) => {\n  const [show, setShow] = useState(true);\n  const [selectValue, setSelectValue] = useState('Kate Prokofieva');\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Please authorize</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <select\n            className=\"custom-select auth-select\"\n            onChange={(e) => setSelectValue(() => e.target.value)}\n          >\n            <UserDropdown />\n          </select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              handleClose();\n              getAuthUser(selectValue);\n            }}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { Login };\n","import React from 'react';\n\nconst UserDropdown = () => {\n  const users = [\n    'Kate Prokofieva',\n    'Alex Prokofiev',\n    'Peter Smolic',\n    'Hana Carpenter',\n  ];\n\n  const usersList = users.map((user) => {\n    return (\n      <option key={user} value={user}>\n        {user}\n      </option>\n    );\n  });\n  return <>{usersList}</>;\n};\n\nexport { UserDropdown };\n","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport { UserContext };\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst ConfirmPopup = ({ eventTitle, eventId, deleteById }) => {\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      <Modal show={show} onHide={handleClose} keyboard={false} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Please authorize</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {`Are you sure you want to delete \"${eventTitle}\" event?`}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            No\n          </Button>\n          <Button variant=\"secondary\" onClick={() => deleteById(eventId)}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { ConfirmPopup };\n","import React, { useState } from 'react';\nimport './newEventPage.css';\nimport { UserDropdown } from '../index';\nimport { time, daysOfWeek } from '../../config';\n\nconst NewEventPage = ({ getNewEvent, onCancelNewEvent }) => {\n  const [event, setEvent] = useState({});\n  const [eventTextError, setEventTextError] = useState(false);\n  const [eventParticipantsError, setEventParticipantsError] = useState(false);\n  const [eventDayError, setEventDayError] = useState(false);\n  const [eventTimeError, setEventTimeError] = useState(false);\n\n  const handleSubmit = (e) => {\n    const hasText = event.hasOwnProperty('eventText');\n    const hasParticipants = event.hasOwnProperty('participants');\n    const hasDay = event.hasOwnProperty('day');\n    const hasTime = event.hasOwnProperty('time');\n    e.preventDefault();\n    if (!hasText) {\n      setEventTextError(true);\n    } else if (!hasParticipants) {\n      setEventParticipantsError(true);\n    } else if (!hasDay) {\n      setEventDayError(true);\n    } else if (!hasTime) {\n      setEventTimeError(true);\n    }\n    if (hasText && hasParticipants && hasDay && hasTime) {\n      getNewEvent(event);\n    }\n  };\n\n  const handleChangeEventText = (e) => {\n    if (e.target.value) {\n      setEvent({\n        ...event,\n        eventText: e.target.value,\n      });\n      setEventTextError(false);\n    }\n  };\n\n  const handleChangeEventParticipants = (e) => {\n    const arr = Array.from(e.target.selectedOptions, (option) => option.value);\n    if (arr) {\n      setEvent({\n        ...event,\n        participants: arr,\n      });\n      setEventParticipantsError(false);\n    }\n  };\n\n  const handleChangeEventTime = (e) => {\n    if (e.target.value.match('^[0-9]{2}$')) {\n      setEvent({\n        ...event,\n        time: e.target.value,\n      });\n      setEventTimeError(false);\n    }\n  };\n\n  const handleChangeEventDay = (e) => {\n    if (e.target.value.match('[a-z]{3}')) {\n      setEvent({\n        ...event,\n        day: e.target.value,\n      });\n      setEventDayError(false);\n    }\n  };\n\n  return (\n    <form id=\"form\">\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputNameEvent\" className=\"col-sm-2 col-form-label\">\n          Name of the event:\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputNameEvent\"\n            placeholder=\"Name of the event:\"\n            required\n            onChange={handleChangeEventText}\n          />\n          {eventTextError && (\n            <p className=\"error\">Please fill in the text of the event</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"participants\" className=\"col-sm-2 col-form-label\">\n          Participants:\n        </label>\n        <div className=\"col-sm-10\">\n          <p className=\"multiselect-tip\">\n            Use 'cmd + click' to select multiple participants:\n          </p>\n          <select\n            id=\"participants\"\n            size=\"2\"\n            className=\"form-control\"\n            multiple\n            required\n            onChange={handleChangeEventParticipants}\n          >\n            <UserDropdown />\n          </select>\n          {eventParticipantsError && (\n            <p className=\"error\">Please select participants</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"day\" className=\"col-sm-2 col-form-label\">\n          Day:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"day\"\n            className=\"form-control\"\n            required\n            onChange={handleChangeEventDay}\n          >\n            <option value=\"\">Choose...</option>\n            {daysOfWeek.map((day) => (\n              <option value={day.value} key={day.value}>\n                {day.fullDay}\n              </option>\n            ))}\n          </select>\n          {eventDayError && <p className=\"error\">Please select day</p>}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"time\" className=\"col-sm-2 col-form-label\">\n          Time:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"time\"\n            className=\"form-control\"\n            required\n            onChange={handleChangeEventTime}\n          >\n            <option value=\"\">Choose...</option>\n            {time.map((time) => (\n              <option value={time.value} key={time.value}>\n                {time.fullTime}\n              </option>\n            ))}\n          </select>\n          {eventTimeError && <p className=\"error\">Please select time</p>}\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-end\">\n        <button\n          id=\"cancel\"\n          type=\"reset\"\n          className=\"btn btn-secondary mr-3\"\n          onClick={onCancelNewEvent}\n        >\n          Cancel\n        </button>\n        <button\n          id=\"create\"\n          type=\"submit\"\n          className=\"btn btn-secondary\"\n          onClick={handleSubmit}\n        >\n          Create\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport { NewEventPage };\n","import axios from 'axios';\nclass Swagger {\n  _apiBase = 'http://158.101.166.74:8080/api/data/prokofievaK/event';\n\n  postNewEvent = async (eventObj) => {\n    const result = await axios.post(\n      this._apiBase,\n      this._createDataObj(eventObj)\n    );\n    return result.data;\n  };\n\n  getAllEvents = async () => {\n    const res = await axios.get(this._apiBase);\n    if (res.data === null) {\n      //throw new Error(`Could not fetch events, received ${res.status}`);\n      return [];\n    } else {\n      return res.data.map(this._transformEvents);\n    }\n  };\n\n  deleteEvent = async (eventId) => {\n    await axios.delete(`${this._apiBase}/${eventId}`);\n  };\n\n  putEvent = async (eventId, eventObj) => {\n    const result = await axios.put(\n      `${this._apiBase}/${eventId}`,\n      this._createDataObj(eventObj)\n    );\n    return this._transformEvent(result);\n  };\n\n  _transformEvents = (event) => {\n    const { eventText, day, time, participants } = JSON.parse(event.data);\n    return {\n      id: event.id,\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _transformEvent = (res) => {\n    const { eventText, day, time, participants } = JSON.parse(res.data.data);\n    return {\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _createDataObj = (eventObj) => {\n    const data = JSON.stringify({\n      data: JSON.stringify(eventObj),\n      id: 'test',\n    });\n    return data;\n  };\n}\n\nconst swagger = new Swagger();\n\nexport default swagger;\n","import React, { useState, useEffect } from 'react';\nimport './app.css';\nimport {\n  Header,\n  CalendarTable,\n  Login,\n  UserContext,\n  NewEventPage,\n} from '../index';\nimport swagger from '../../services';\nimport { users } from '../../config';\n\nconst App = () => {\n  const [user, setUser] = useState('Kate Prokofieva');\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [eventsFromServer, setEventsFromServer] = useState([]);\n  const [filteredUser, setFilteredUser] = useState('All members');\n  const [showNewEventForm, setShowNewEventForm] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const events = await swagger.getAllEvents();\n        setEventsFromServer(events);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n    fetchEvents();\n  }, []);\n  const getAuthUser = (authUser) => {\n    const user = users.find((user) => user.name === authUser);\n    setUser(user);\n    setLoginStatus(true);\n  };\n\n  const getNewEvent = (newEvent) => {\n    const index = eventsFromServer.find(\n      (eventFromCalendar) =>\n        eventFromCalendar.day === newEvent.day &&\n        eventFromCalendar.time === newEvent.time\n    );\n    if (index === undefined) {\n      swagger.postNewEvent(newEvent).then((event) => {\n        const newObjEvent = { ...newEvent, id: event.id };\n        setEventsFromServer((prev) => [...prev, newObjEvent]);\n      });\n\n      setShowNewEventForm(false);\n    } else {\n      setErrorMessage(true);\n    }\n  };\n\n  const getFilteredUser = (userName) => {\n    setFilteredUser(userName);\n  };\n\n  const openNewEventForm = () => {\n    setShowNewEventForm(true);\n  };\n\n  const filterEvents = (allEvents, userName) => {\n    if (userName === 'All members') {\n      return allEvents;\n    } else {\n      const filteredEvents = allEvents.filter(({ participants }) =>\n        participants.includes(userName)\n      );\n      return filteredEvents;\n    }\n  };\n\n  const onCancelNewEvent = () => {\n    setShowNewEventForm(false);\n  };\n\n  const deleteById = async (eventId) => {\n    try {\n      await swagger.deleteEvent(eventId);\n      const index = eventsFromServer.findIndex((event) => event.id === eventId);\n      const copyOfEventsArr = [...eventsFromServer];\n      copyOfEventsArr.splice(index, 1);\n      setEventsFromServer(copyOfEventsArr);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  if (showNewEventForm) {\n    return (\n      <div className=\"container\">\n        <div className=\"container-newEvent\">\n          {errorMessage && (\n            <div className=\"alert alert-event alert-danger\" role=\"alert\">\n              Failed to create an event. Time slot is already booked.\n            </div>\n          )}\n          <NewEventPage\n            getNewEvent={getNewEvent}\n            eventsFromServer={eventsFromServer}\n            onCancelNewEvent={onCancelNewEvent}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <UserContext.Provider value={user}>\n        <div className=\"container-calendar\">\n          {!loginStatus && <Login getAuthUser={getAuthUser} />}\n          <Header\n            getFilteredUser={getFilteredUser}\n            openNewEventForm={openNewEventForm}\n          />\n          <CalendarTable\n            eventsFromServer={filterEvents(eventsFromServer, filteredUser)}\n            deleteById={deleteById}\n          />\n        </div>\n      </UserContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}