{"version":3,"sources":["components/header/index.js","config.js","components/calendarTable/index.js","components/tableCell/index.js","components/login/index.js","components/userDropdown/index.js","components/userContext/index.js","components/confirmPopup/index.js","components/newEventPage/index.js","services/index.js","components/app/index.js","index.js"],"names":["Header","getFilteredUser","openNewEventForm","authUser","useContext","UserContext","className","onChange","e","target","value","isAdmin","type","onClick","users","name","id","time","daysOfWeek","fullDay","CalendarTable","eventsFromServer","deleteById","classes","rows","map","scope","slice","Math","floor","random","col","TableCell","useState","confirmationPopup","setConfirmationPopup","cellClass","event","find","day","undefined","eventText","aria-label","eventTitle","eventId","Login","getAuthUser","show","setShow","selectValue","setSelectValue","handleClose","Modal","onHide","backdrop","keyboard","centered","closeButton","Title","Body","Footer","Button","variant","UserDropdown","usersList","user","React","createContext","ConfirmPopup","NewEventPage","htmlFor","placeholder","required","size","multiple","swagger","_apiBase","postNewEvent","eventObj","a","axios","post","_createDataObj","result","data","getAllEvents","get","res","_transformEvents","deleteEvent","delete","putEvent","put","_transformEvent","JSON","parse","participants","stringify","App","setUser","setEventsFromServer","filteredUser","setFilteredUser","showNewEventForm","setShowNewEventForm","useEffect","events","Promise","reject","fetchEvents","allEvents","userName","index","findIndex","copyOfEventsArr","splice","Provider","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3393e71.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport './header.css';\nimport { UserDropdown } from '../index';\nimport { UserContext } from '../index';\n\nconst Header = ({ getFilteredUser, openNewEventForm }) => {\n  const authUser = useContext(UserContext);\n\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <h1>Calendar</h1>\n      <div className=\"d-flex\">\n        <div className=\"mr-3\">\n          <select\n            className=\"custom-select users-filter\"\n            onChange={(e) => {\n              getFilteredUser(e.target.value);\n            }}\n          >\n            <option value=\"All members\">All members</option>\n            <UserDropdown />\n          </select>\n        </div>\n        <div>\n          {authUser.isAdmin && (\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary new-event\"\n              onClick={() => openNewEventForm()}\n            >\n              New Event +\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Header };\n","const users = [\n  { name: 'Kate Prokofieva', isAdmin: true, id: 1 },\n  { name: 'Alex Prokofiev', isAdmin: false, id: 2 },\n  { name: 'Peter Smolic', isAdmin: false, id: 3 },\n  { name: 'Hana Carpenter', isAdmin: false, id: 4 },\n];\n\nconst time = [\n  '10:00',\n  '11:00',\n  '12:00',\n  '13:00',\n  '14:00',\n  '15:00',\n  '16:00',\n  '17:00',\n  '18:00',\n];\n\nconst daysOfWeek = [\n  { fullDay: 'Monday', value: 'mon' },\n  { fullDay: 'Tuesday', value: 'tue' },\n  { fullDay: 'Wednesday', value: 'wed' },\n  { fullDay: 'Thursday', value: 'thu' },\n  { fullDay: 'Friday', value: 'fri' },\n];\n\nexport { users, time, daysOfWeek };\n","import React from 'react';\nimport './calendarTable.css';\nimport { TableCell } from '../index';\nimport { time } from '../../config';\n\nconst CalendarTable = ({ eventsFromServer, deleteById }) => {\n  const classes = [\n    'cell-mon-',\n    'cell-tue-',\n    'cell-wed-',\n    'cell-thu-',\n    'cell-fri-',\n  ];\n\n  const rows = time.map((time) => (\n    <tr key={time + Math.floor(Math.random() * 100)}>\n      <th scope=\"row\">{time}</th>\n      {classes.map((className) => (\n        <TableCell\n          className={className}\n          time={time.slice(0, 2)}\n          key={className}\n          eventsFromServer={eventsFromServer}\n          deleteById={deleteById}\n        />\n      ))}\n    </tr>\n  ));\n\n  return (\n    <table className=\"table table-bordered text-center\">\n      <thead className=\"table-secondary\">\n        <tr>\n          {['Name', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'].map((col) => (\n            <th scope=\"col\" key={col}>\n              {col}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nexport { CalendarTable };\n","import React, { useContext, useState } from 'react';\nimport './tableCell.css';\nimport { UserContext } from '../index';\nimport { ConfirmPopup } from '../index';\n\nconst TableCell = ({ className, time, eventsFromServer, deleteById }) => {\n  const [confirmationPopup, setConfirmationPopup] = useState(false);\n  const authUser = useContext(UserContext);\n  const cellClass = `${className}${time}`;\n  const event = eventsFromServer.find(\n    (event) => cellClass === `cell-${event.day}-${event.time}`\n  );\n  const showConfirmationPopup = () => {\n    setConfirmationPopup(!confirmationPopup);\n  };\n\n  if (event !== undefined) {\n    return (\n      <td className={`${cellClass} event`}>\n        <div id={cellClass}>\n          {event.eventText}\n          {authUser.isAdmin && (\n            <button\n              type=\"button\"\n              id=\"delete-event\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={() => {\n                showConfirmationPopup();\n              }}\n            >\n              <span className=\"delete-event\">&times;</span>\n            </button>\n          )}\n          {confirmationPopup && (\n            <ConfirmPopup\n              eventTitle={event.eventText}\n              eventId={event.id}\n              deleteById={deleteById}\n            />\n          )}\n        </div>\n      </td>\n    );\n  } else {\n    return <td className={cellClass}></td>;\n  }\n};\n\nexport { TableCell };\n","import React, { useState } from 'react';\nimport { UserDropdown } from '../index';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst Login = ({ getAuthUser }) => {\n  const [show, setShow] = useState(true);\n  const [selectValue, setSelectValue] = useState('Kate Prokofieva');\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Please authorize</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <select\n            className=\"custom-select auth-select\"\n            onChange={(e) => setSelectValue(() => e.target.value)}\n          >\n            <UserDropdown />\n          </select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              handleClose();\n              getAuthUser(selectValue);\n            }}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { Login };\n","import React from 'react';\n\nconst UserDropdown = () => {\n  const users = [\n    'Kate Prokofieva',\n    'Alex Prokofiev',\n    'Peter Smolic',\n    'Hana Carpenter',\n  ];\n\n  const usersList = users.map((user) => {\n    return (\n      <option key={user} value={user}>\n        {user}\n      </option>\n    );\n  });\n  return <>{usersList}</>;\n};\n\nexport { UserDropdown };\n","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport { UserContext };\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst ConfirmPopup = ({ eventTitle, eventId, deleteById }) => {\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      <Modal show={show} onHide={handleClose} keyboard={false} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Please authorize</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {`Are you sure you want to delete \"${eventTitle}\" event?`}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            No\n          </Button>\n          <Button variant=\"secondary\" onClick={() => deleteById(eventId)}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { ConfirmPopup };\n","import React from 'react';\nimport './newEventPage.css';\nimport { UserDropdown } from '../index';\nimport { time, daysOfWeek } from '../../config';\n\nconst NewEventPage = () => {\n  return (\n    <form id=\"form\">\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputNameEvent\" className=\"col-sm-2 col-form-label\">\n          Name of the event:\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputNameEvent\"\n            placeholder=\"Name of the event:\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"participants\" className=\"col-sm-2 col-form-label\">\n          Participants:\n        </label>\n        <div className=\"col-sm-10\">\n          <p className=\"multiselect-tip\">\n            Use 'cmd + click' to select multiple participants:\n          </p>\n          <select\n            id=\"participants\"\n            size=\"2\"\n            className=\"form-control\"\n            multiple\n            required\n          >\n            <UserDropdown />\n          </select>\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"day\" className=\"col-sm-2 col-form-label\">\n          Day:\n        </label>\n        <div className=\"col-sm-10\">\n          <select id=\"day\" className=\"form-control\" required>\n            <option value=\"\">Choose...</option>\n            {daysOfWeek.map((day) => (\n              <option value={day.value} key={day.value}>\n                {day.fullDay}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"time\" className=\"col-sm-2 col-form-label\">\n          Time:\n        </label>\n        <div className=\"col-sm-10\">\n          <select id=\"time\" className=\"form-control\" required>\n            <option value=\"\">Choose...</option>\n            {time.map((time) => (\n              <option value=\"10\" key={time}>\n                {time}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-end\">\n        <button id=\"cancel\" type=\"reset\" className=\"btn btn-secondary mr-3\">\n          Cancel\n        </button>\n        <button id=\"create\" type=\"submit\" className=\"btn btn-secondary\">\n          Create\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport { NewEventPage };\n","import axios from 'axios';\nclass Swagger {\n  _apiBase = 'http://158.101.166.74:8080/api/data/prokofievaK/event';\n\n  postNewEvent = async (eventObj) => {\n    const result = await axios.post(\n      this._apiBase,\n      this._createDataObj(eventObj)\n    );\n    return result.data;\n  };\n\n  getAllEvents = async () => {\n    const res = await axios.get(this._apiBase);\n    if (res.data === null) {\n      //throw new Error(`Could not fetch events, received ${res.status}`);\n      return [];\n    } else {\n      return res.data.map(this._transformEvents);\n    }\n  };\n\n  deleteEvent = async (eventId) => {\n    await axios.delete(`${this._apiBase}/${eventId}`);\n  };\n\n  putEvent = async (eventId, eventObj) => {\n    const result = await axios.put(\n      `${this._apiBase}/${eventId}`,\n      this._createDataObj(eventObj)\n    );\n    return this._transformEvent(result);\n  };\n\n  _transformEvents = (event) => {\n    const { eventText, day, time, participants } = JSON.parse(event.data);\n    return {\n      id: event.id,\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _transformEvent = (res) => {\n    const { eventText, day, time, participants } = JSON.parse(res.data.data);\n    return {\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _createDataObj = (eventObj) => {\n    const data = JSON.stringify({\n      data: JSON.stringify(eventObj),\n      id: 'test',\n    });\n    return data;\n  };\n}\n\nconst swagger = new Swagger();\n\nexport default swagger;\n","import React, { useState, useEffect } from 'react';\nimport './app.css';\nimport {\n  Header,\n  CalendarTable,\n  Login,\n  UserContext,\n  NewEventPage,\n} from '../index';\nimport swagger from '../../services';\nimport { users } from '../../config';\n\nconst App = () => {\n  const [user, setUser] = useState('Kate Prokofieva');\n  const [eventsFromServer, setEventsFromServer] = useState([]);\n  const [filteredUser, setFilteredUser] = useState('All members');\n  const [showNewEventForm, setShowNewEventForm] = useState(false);\n\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const events = await swagger.getAllEvents();\n        setEventsFromServer(events);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n    fetchEvents();\n  }, []);\n\n  const getAuthUser = (authUser) => {\n    const user = users.find((user) => user.name === authUser);\n    setUser(user);\n  };\n\n  const getFilteredUser = (userName) => {\n    setFilteredUser(userName);\n  };\n\n  const openNewEventForm = () => {\n    setShowNewEventForm(true);\n  };\n\n  const filterEvents = (allEvents, userName) => {\n    if (userName === 'All members') {\n      return allEvents;\n    } else {\n      const filteredEvents = allEvents.filter(({ participants }) =>\n        participants.includes(userName)\n      );\n      return filteredEvents;\n    }\n  };\n\n  const deleteById = async (eventId) => {\n    try {\n      await swagger.deleteEvent(eventId);\n      const index = eventsFromServer.findIndex((event) => event.id === eventId);\n      const copyOfEventsArr = [...eventsFromServer];\n      copyOfEventsArr.splice(index, 1);\n      setEventsFromServer(copyOfEventsArr);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  if (showNewEventForm) {\n    return (\n      <div className=\"container\">\n        <div className=\"container-newEvent\">\n          <NewEventPage />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <UserContext.Provider value={user}>\n        <div className=\"container-calendar\">\n          <Login getAuthUser={getAuthUser} />\n          <Header\n            getFilteredUser={getFilteredUser}\n            openNewEventForm={openNewEventForm}\n          />\n          <CalendarTable\n            eventsFromServer={filterEvents(eventsFromServer, filteredUser)}\n            deleteById={deleteById}\n          />\n        </div>\n      </UserContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}