{"version":3,"sources":["store/types.js","store/actionCreators.js","components/header/index.js","services/index.js","config.js","components/calendarTable/index.js","store/middleware.js","utils.js","components/tableCell/index.js","components/login/index.js","components/userDropdown/index.js","components/confirmPopup/index.js","store/reducers.js","components/newEventPage/index.js","components/app/index.js","store/index.js","index.js"],"names":["LOAD_EVENTS","DELETE_EVENT","ON_EVENT_DELETE","CLOSE_POPUP","GET_PARTICIPANT_FROM_FILTER","GET_AUTH_USER","LOGIN","POST_NEW_EVENT","SHOW_NEW_EVENT_FORM","CHECK_DUPLICATE","closePopup","type","Header","dispatch","useDispatch","isAdmin","useSelector","state","className","onChange","e","user","target","value","onClick","swagger","_apiBase","postNewEvent","eventObj","a","axios","post","_createDataObj","result","data","getAllEvents","get","res","map","_transformEvents","deleteEvent","eventId","delete","putEvent","put","_transformEvent","event","JSON","parse","eventText","day","time","participants","id","stringify","users","name","fullTime","daysOfWeek","fullDay","CalendarTable","events","confirmationPopup","showDeletePopUp","filteredUser","filterValue","useEffect","rows","scope","allEvents","userName","filter","includes","col","TableCell","find","undefined","aria-label","showDeleteConfirmation","Login","showLoginPopUp","Modal","show","backdrop","keyboard","centered","Title","Body","Footer","Button","variant","UserDropdown","usersList","ConfirmPopup","deletedEvent","onHide","initState","authUser","showEventForm","showCalendar","showErrorMessage","isEventDuplicate","newEvent","index","findIndex","copyOfEventsArr","splice","showConfirmation","login","calendarReducer","action","NewEventPage","useState","setEvent","eventTextError","setEventTextError","eventParticipantsError","setEventParticipantsError","eventDayError","setEventDayError","eventTimeError","setEventTimeError","htmlFor","placeholder","required","size","multiple","arr","Array","from","selectedOptions","option","match","hasText","hasOwnProperty","hasParticipants","hasDay","hasTime","preventDefault","App","role","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50712287.chunk.js","sourcesContent":["const LOAD_EVENTS = `LOAD_EVENTS`;\nconst DELETE_EVENT = `DELETE_EVENT `;\nconst ON_EVENT_DELETE = `ON_EVENT_DELETE `;\nconst CLOSE_POPUP = 'CLOSE_POPUP';\nconst GET_PARTICIPANT_FROM_FILTER = 'GET_PARTICIPANT_FROM_FILTER';\nconst GET_AUTH_USER = 'GET_AUTH_USER';\nconst LOGIN = 'LOGIN';\nconst POST_NEW_EVENT = 'POST_NEW_EVENT';\nconst SHOW_NEW_EVENT_FORM = 'SHOW_NEW_EVENT_FORM';\nconst CHECK_DUPLICATE = 'CHECK_DUPLICATE';\n\nexport {\n  LOAD_EVENTS,\n  ON_EVENT_DELETE,\n  DELETE_EVENT,\n  CLOSE_POPUP,\n  GET_PARTICIPANT_FROM_FILTER,\n  GET_AUTH_USER,\n  LOGIN,\n  POST_NEW_EVENT,\n  SHOW_NEW_EVENT_FORM,\n  CHECK_DUPLICATE,\n};\n","import {\n  ON_EVENT_DELETE,\n  CLOSE_POPUP,\n  GET_PARTICIPANT_FROM_FILTER,\n  GET_AUTH_USER,\n  LOGIN,\n  SHOW_NEW_EVENT_FORM,\n  CHECK_DUPLICATE,\n} from './types';\n\nconst showDeleteConfirmation = (event) => ({\n  type: ON_EVENT_DELETE,\n  event,\n});\n\nconst closePopup = () => ({\n  type: CLOSE_POPUP,\n});\n\nconst getParticipantFromFilter = (user) => ({\n  type: GET_PARTICIPANT_FROM_FILTER,\n  user,\n});\n\nconst getAuthUser = (user) => ({\n  type: GET_AUTH_USER,\n  user,\n});\n\nconst login = () => ({\n  type: LOGIN,\n});\n\nconst showNewEventForm = () => ({\n  type: SHOW_NEW_EVENT_FORM,\n});\n\nconst isEventDuplicate = (event) => ({\n  type: CHECK_DUPLICATE,\n  event,\n});\n\nexport {\n  showDeleteConfirmation,\n  closePopup,\n  getParticipantFromFilter,\n  getAuthUser,\n  login,\n  showNewEventForm,\n  isEventDuplicate,\n};\n","import React from 'react';\nimport './header.css';\nimport { UserDropdown } from '../index';\nimport {\n  getParticipantFromFilter,\n  showNewEventForm,\n} from '../../store/actionCreators';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAdmin = useSelector((state) => state.isAdmin);\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <h1>Calendar</h1>\n      <div className=\"d-flex\">\n        <div className=\"mr-3\">\n          <select\n            className=\"custom-select users-filter\"\n            onChange={(e) => {\n              dispatch(getParticipantFromFilter(e.target.value));\n            }}\n          >\n            <option value=\"All members\">All members</option>\n            <UserDropdown />\n          </select>\n        </div>\n        <div>\n          {isAdmin && (\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary new-event\"\n              onClick={() => dispatch(showNewEventForm())}\n            >\n              New Event +\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Header };\n","import axios from 'axios';\nclass Swagger {\n  _apiBase = 'http://158.101.166.74:8080/api/data/prokofievaK/event';\n\n  postNewEvent = async (eventObj) => {\n    const result = await axios.post(\n      this._apiBase,\n      this._createDataObj(eventObj)\n    );\n    return result.data;\n  };\n\n  getAllEvents = async () => {\n    const res = await axios.get(this._apiBase);\n    if (res.data === null) {\n      //throw new Error(`Could not fetch events, received ${res.status}`);\n      return [];\n    } else {\n      return res.data.map(this._transformEvents);\n    }\n  };\n\n  deleteEvent = async (eventId) => {\n    await axios.delete(`${this._apiBase}/${eventId}`);\n  };\n\n  putEvent = async (eventId, eventObj) => {\n    const result = await axios.put(\n      `${this._apiBase}/${eventId}`,\n      this._createDataObj(eventObj)\n    );\n    return this._transformEvent(result);\n  };\n\n  _transformEvents = (event) => {\n    const { eventText, day, time, participants } = JSON.parse(event.data);\n    return {\n      id: event.id,\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _transformEvent = (res) => {\n    const { eventText, day, time, participants } = JSON.parse(res.data.data);\n    return {\n      eventText,\n      day,\n      time,\n      participants,\n    };\n  };\n\n  _createDataObj = (eventObj) => {\n    const data = JSON.stringify({\n      data: JSON.stringify(eventObj),\n      id: 'test',\n    });\n    return data;\n  };\n}\n\nconst swagger = new Swagger();\n\nexport default swagger;\n","const users = [\n  { name: 'Kate Prokofieva', isAdmin: true, id: 1 },\n  { name: 'Alex Prokofiev', isAdmin: false, id: 2 },\n  { name: 'Peter Smolic', isAdmin: false, id: 3 },\n  { name: 'Hana Carpenter', isAdmin: false, id: 4 },\n];\n\nconst time = [\n  { fullTime: '10:00', value: '10' },\n  { fullTime: '11:00', value: '11' },\n  { fullTime: '12:00', value: '12' },\n  { fullTime: '13:00', value: '13' },\n  { fullTime: '14:00', value: '14' },\n  { fullTime: '15:00', value: '15' },\n  { fullTime: '16:00', value: '16' },\n  { fullTime: '17:00', value: '17' },\n  { fullTime: '18:00', value: '18' },\n];\n\nconst daysOfWeek = [\n  { fullDay: 'Monday', value: 'mon' },\n  { fullDay: 'Tuesday', value: 'tue' },\n  { fullDay: 'Wednesday', value: 'wed' },\n  { fullDay: 'Thursday', value: 'thu' },\n  { fullDay: 'Friday', value: 'fri' },\n];\n\nexport { users, time, daysOfWeek };\n","import React, { useEffect } from 'react';\nimport './calendarTable.css';\nimport { TableCell, ConfirmPopup } from '../index';\nimport { loadAllEvents } from '../../store/middleware';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { daysOfWeek, time } from '../../config';\nimport { filterEvents } from '../../utils';\n\nconst CalendarTable = () => {\n  const dispatch = useDispatch();\n  const events = useSelector((state) => state.events);\n  const confirmationPopup = useSelector((state) => state.showDeletePopUp);\n  const filteredUser = useSelector((state) => state.filterValue);\n\n  useEffect(() => {\n    dispatch(loadAllEvents());\n  }, [dispatch]);\n\n  const rows = time.map((time) => (\n    <tr key={time.value}>\n      <th scope=\"row\">{time.fullTime}</th>\n      {daysOfWeek.map((day) => (\n        <TableCell\n          time={time.value}\n          day={day.value}\n          events={filterEvents(events, filteredUser)}\n          key={`${day.value}${time.value}`}\n        />\n      ))}\n    </tr>\n  ));\n\n  return (\n    <div>\n      {confirmationPopup && (\n        <ConfirmPopup confirmationPopup={confirmationPopup} />\n      )}\n      <table className=\"table table-bordered text-center\">\n        <thead className=\"table-secondary\">\n          <tr>\n            <th scope=\"col\" key=\"name\">\n              Name\n            </th>\n            {daysOfWeek.map((col) => (\n              <th scope=\"col\" key={col.fullDay}>\n                {col.fullDay}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n};\nexport { CalendarTable };\n","import { LOAD_EVENTS, DELETE_EVENT, POST_NEW_EVENT } from './types';\nimport swagger from '../services';\n\nconst loadAllEvents = () => {\n  return async (dispatch) => {\n    const events = await swagger.getAllEvents();\n    dispatch({\n      type: LOAD_EVENTS,\n      events,\n    });\n  };\n};\n\nconst deleteEvent = (id) => {\n  return async (dispatch) => {\n    await swagger.deleteEvent(id);\n    dispatch({\n      type: DELETE_EVENT,\n      id,\n    });\n  };\n};\n\nconst postNewEvent = (event) => {\n  return async (dispatch) => {\n    await swagger.postNewEvent(event);\n    dispatch({\n      type: POST_NEW_EVENT,\n    });\n  };\n};\n\nexport { loadAllEvents, deleteEvent, postNewEvent };\n","const filterEvents = (allEvents, userName) => {\n  if (userName === 'All members') {\n    return allEvents;\n  } else {\n    const filteredEvents = allEvents.filter(({ participants }) =>\n      participants.includes(userName)\n    );\n    return filteredEvents;\n  }\n};\n\nexport { filterEvents };\n","import React from 'react';\nimport './tableCell.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { showDeleteConfirmation } from '../../store/actionCreators';\n\nconst TableCell = ({ time, day, events }) => {\n  const dispatch = useDispatch();\n  const isAdmin = useSelector((state) => state.isAdmin);\n\n  const event = events.find(\n    (event) => event.day === day && event.time === time\n  );\n\n  if (event === undefined) return <td></td>;\n\n  return (\n    <td className=\"event\">\n      <div>\n        {event.eventText}\n        {isAdmin && (\n          <button\n            type=\"button\"\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={() => dispatch(showDeleteConfirmation(event))}\n          >\n            <span className=\"delete-event\">&times;</span>\n          </button>\n        )}\n      </div>\n    </td>\n  );\n};\n\nexport { TableCell };\n","import React from 'react';\nimport { UserDropdown } from '../index';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAuthUser, login } from '../../store/actionCreators';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const showLoginPopUp = useSelector((state) => state.showLoginPopUp);\n\n  return (\n    <div>\n      <Modal show={showLoginPopUp} backdrop=\"static\" keyboard={false} centered>\n        <Modal.Header>\n          <Modal.Title>Please authorize</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <select\n            className=\"custom-select auth-select\"\n            onChange={(e) => {\n              dispatch(getAuthUser(e.target.value));\n            }}\n          >\n            <UserDropdown />\n          </select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              dispatch(login());\n            }}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { Login };\n","import React from 'react';\n\nconst UserDropdown = () => {\n  const users = [\n    'Kate Prokofieva',\n    'Alex Prokofiev',\n    'Peter Smolic',\n    'Hana Carpenter',\n  ];\n\n  const usersList = users.map((user) => {\n    return (\n      <option key={user} value={user}>\n        {user}\n      </option>\n    );\n  });\n  return <>{usersList}</>;\n};\n\nexport { UserDropdown };\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteEvent } from '../../store/middleware';\nimport { closePopup } from '../../store/actionCreators';\n\nconst ConfirmPopup = ({ confirmationPopup }) => {\n  const dispatch = useDispatch();\n  const deletedEvent = useSelector((state) => state.deletedEvent);\n  const { eventText, id } = deletedEvent;\n  const handleClose = () => dispatch(closePopup());\n\n  return (\n    <div>\n      <Modal\n        show={confirmationPopup}\n        onHide={handleClose}\n        keyboard={false}\n        centered\n      >\n        <Modal.Body>\n          {`Are you sure you want to delete \"${eventText}\" event?`}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => dispatch(closePopup())}>\n            No\n          </Button>\n          <Button variant=\"secondary\" onClick={() => dispatch(deleteEvent(id))}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport { ConfirmPopup };\n","import {\n  LOAD_EVENTS,\n  ON_EVENT_DELETE,\n  DELETE_EVENT,\n  CLOSE_POPUP,\n  GET_PARTICIPANT_FROM_FILTER,\n  GET_AUTH_USER,\n  LOGIN,\n  POST_NEW_EVENT,\n  SHOW_NEW_EVENT_FORM,\n  CHECK_DUPLICATE,\n} from './types';\nimport { users } from '../config';\n\nconst initState = {\n  events: [],\n  isAdmin: false,\n  authUser: 'Kate Prokofieva',\n  filterValue: 'All members',\n  showEventForm: false,\n  showCalendar: true,\n  showErrorMessage: false,\n  showDeletePopUp: false,\n  showLoginPopUp: true,\n  isEventDuplicate: false,\n  newEvent: null,\n  deletedEvent: {},\n};\n\nconst deleteEvent = (state, id) => {\n  const { events } = state;\n  const index = events.findIndex((event) => event.id === id);\n  const copyOfEventsArr = [...events];\n  copyOfEventsArr.splice(index, 1);\n  return {\n    ...state,\n    events: copyOfEventsArr,\n    showDeletePopUp: false,\n  };\n};\n\nconst showConfirmation = (state, event) => {\n  return {\n    ...state,\n    showDeletePopUp: true,\n    deletedEvent: event,\n  };\n};\n\nconst login = (state) => {\n  const { authUser } = state;\n  const user = users.find((user) => user.name === authUser);\n  return {\n    ...state,\n    isAdmin: user.isAdmin,\n    showLoginPopUp: false,\n  };\n};\n\nconst isEventDuplicate = (state, event) => {\n  const { events } = state;\n  const isEventDuplicate = events.find(\n    (e) => e.day === event.day && e.time === event.time\n  );\n  if (isEventDuplicate === undefined) {\n    return {\n      ...state,\n      newEvent: event,\n      isEventDuplicate: false,\n    };\n  } else {\n    return {\n      ...state,\n      isEventDuplicate: true,\n    };\n  }\n};\n\nexport function calendarReducer(state = initState, action) {\n  switch (action.type) {\n    case LOAD_EVENTS:\n      return { ...state, events: action.events };\n    case ON_EVENT_DELETE:\n      return showConfirmation(state, action.event);\n    case DELETE_EVENT:\n      return deleteEvent(state, action.id);\n    case CLOSE_POPUP:\n      return {\n        ...state,\n        showDeletePopUp: false,\n        showEventForm: false,\n        showCalendar: true,\n      };\n    case GET_PARTICIPANT_FROM_FILTER:\n      return { ...state, filterValue: action.user };\n    case GET_AUTH_USER:\n      return { ...state, authUser: action.user };\n    case LOGIN:\n      return login(state);\n    case POST_NEW_EVENT:\n      return {\n        ...state,\n        showEventForm: false,\n        showCalendar: true,\n        isEventDuplicate: false,\n      };\n    case SHOW_NEW_EVENT_FORM:\n      return { ...state, showEventForm: true, showCalendar: false };\n    case CHECK_DUPLICATE:\n      return isEventDuplicate(state, action.event);\n    default:\n      return state;\n  }\n}\n\nexport default calendarReducer;\n","import React, { useState, useEffect } from 'react';\nimport './newEventPage.css';\nimport { UserDropdown } from '../index';\nimport { time, daysOfWeek } from '../../config';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postNewEvent } from '../../store/middleware';\nimport { isEventDuplicate, closePopup } from '../../store/actionCreators';\nimport calendarReducer from '../../store/reducers';\n\nconst NewEventPage = () => {\n  const dispatch = useDispatch();\n  const newEvent = useSelector((state) => state.newEvent);\n\n  const [event, setEvent] = useState({});\n  const [eventTextError, setEventTextError] = useState(false);\n  const [eventParticipantsError, setEventParticipantsError] = useState(false);\n  const [eventDayError, setEventDayError] = useState(false);\n  const [eventTimeError, setEventTimeError] = useState(false);\n\n  const handleSubmit = (e) => {\n    const hasText = event.hasOwnProperty('eventText');\n    const hasParticipants = event.hasOwnProperty('participants');\n    const hasDay = event.hasOwnProperty('day');\n    const hasTime = event.hasOwnProperty('time');\n    e.preventDefault();\n    if (!hasText) {\n      setEventTextError(true);\n    } else if (!hasParticipants) {\n      setEventParticipantsError(true);\n    } else if (!hasDay) {\n      setEventDayError(true);\n    } else if (!hasTime) {\n      setEventTimeError(true);\n    }\n    if (hasText && hasParticipants && hasDay && hasTime) {\n      dispatch(isEventDuplicate(event));\n    }\n  };\n\n  useEffect(() => {\n    if (newEvent) {\n      dispatch(postNewEvent(event));\n    }\n  }, [dispatch, newEvent, event]);\n\n  const handleChangeEventText = (e) => {\n    if (e.target.value) {\n      setEvent({\n        ...event,\n        eventText: e.target.value,\n      });\n      setEventTextError(false);\n    }\n  };\n\n  const handleChangeEventParticipants = (e) => {\n    const arr = Array.from(e.target.selectedOptions, (option) => option.value);\n    if (arr) {\n      setEvent({\n        ...event,\n        participants: arr,\n      });\n      setEventParticipantsError(false);\n    }\n  };\n\n  const handleChangeEventTime = (e) => {\n    if (e.target.value.match('^[0-9]{2}$')) {\n      setEvent({\n        ...event,\n        time: e.target.value,\n      });\n      setEventTimeError(false);\n    }\n  };\n\n  const handleChangeEventDay = (e) => {\n    if (e.target.value.match('[a-z]{3}')) {\n      setEvent({\n        ...event,\n        day: e.target.value,\n      });\n      setEventDayError(false);\n    }\n  };\n\n  return (\n    <form id=\"form\">\n      <div className=\"form-group row\">\n        <label htmlFor=\"inputNameEvent\" className=\"col-sm-2 col-form-label\">\n          Name of the event:\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputNameEvent\"\n            placeholder=\"Name of the event:\"\n            required\n            onChange={handleChangeEventText}\n          />\n          {eventTextError && (\n            <p className=\"error\">Please fill in the text of the event</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"participants\" className=\"col-sm-2 col-form-label\">\n          Participants:\n        </label>\n        <div className=\"col-sm-10\">\n          <p className=\"multiselect-tip\">\n            Use 'cmd + click' to select multiple participants:\n          </p>\n          <select\n            id=\"participants\"\n            size=\"2\"\n            className=\"form-control\"\n            multiple\n            required\n            onChange={handleChangeEventParticipants}\n          >\n            <UserDropdown />\n          </select>\n          {eventParticipantsError && (\n            <p className=\"error\">Please select participants</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"day\" className=\"col-sm-2 col-form-label\">\n          Day:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"day\"\n            className=\"form-control\"\n            required\n            onChange={handleChangeEventDay}\n          >\n            <option value=\"\">Choose...</option>\n            {daysOfWeek.map((day) => (\n              <option value={day.value} key={day.value}>\n                {day.fullDay}\n              </option>\n            ))}\n          </select>\n          {eventDayError && <p className=\"error\">Please select day</p>}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label htmlFor=\"time\" className=\"col-sm-2 col-form-label\">\n          Time:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"time\"\n            className=\"form-control\"\n            required\n            onChange={handleChangeEventTime}\n          >\n            <option value=\"\">Choose...</option>\n            {time.map((time) => (\n              <option value={time.value} key={time.value}>\n                {time.fullTime}\n              </option>\n            ))}\n          </select>\n          {eventTimeError && <p className=\"error\">Please select time</p>}\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-end\">\n        <button\n          id=\"cancel\"\n          type=\"reset\"\n          className=\"btn btn-secondary mr-3\"\n          onClick={() => dispatch(closePopup())}\n        >\n          Cancel\n        </button>\n        <button\n          id=\"create\"\n          type=\"submit\"\n          className=\"btn btn-secondary\"\n          onClick={handleSubmit}\n        >\n          Create\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport { NewEventPage };\n","import React from 'react';\nimport './app.css';\nimport { Header, CalendarTable, Login, NewEventPage } from '../index';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const showCalendar = useSelector((state) => state.showCalendar);\n  const showEventForm = useSelector((state) => state.showEventForm);\n  const isEventDuplicate = useSelector((state) => state.isEventDuplicate);\n\n  return (\n    <div className=\"container\">\n      {showCalendar && (\n        <div className=\"container-calendar\">\n          <Login />\n          <Header />\n          <CalendarTable />\n        </div>\n      )}\n      {showEventForm && (\n        <div className=\"container-newEvent\">\n          {isEventDuplicate && (\n            <div className=\"alert alert-event alert-danger\" role=\"alert\">\n              Failed to create an event. Time slot is already booked.\n            </div>\n          )}\n          <NewEventPage />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport calendarReducer from './reducers';\n\nconst store = createStore(\n  calendarReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}